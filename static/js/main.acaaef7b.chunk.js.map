{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","name","email","className","target","rel","href","CommentInfo","comment","body","CommentList","comments","length","map","id","PostInfo","post","title","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"018IAEaA,EAAW,SAAC,GAAD,QACtBC,KACEC,EAFoB,EAEpBA,KACAC,EAHoB,EAGpBA,MAHoB,OAMtB,8BACG,eAED,mBACEC,UAAU,WACVC,OAAO,SACPC,IAAI,aACJC,KAAI,iBAAYJ,GAJlB,SAMGD,QCjBMM,G,MAAc,SAAC,GAAD,QAAGC,QAC5BP,EADyB,EACzBA,KACAC,EAFyB,EAEzBA,MACAO,EAHyB,EAGzBA,KAHyB,OAKzB,sBAAKN,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGF,IAGH,sCAIA,mBACEE,UAAU,qBACVC,OAAO,SACPC,IAAI,aACJC,KAAI,iBAAYJ,GAJlB,SAMGA,OAIL,qBAAKC,UAAU,oBAAf,SACGM,SCvBMC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzBA,EAASC,OAEL,qBAAKT,UAAU,cAAf,SACGQ,EAASE,KAAI,SAAAL,GAAO,OACnB,cAAC,EAAD,CACEA,QAASA,GACJA,EAAQM,SAMnB,mBAAG,UAAQ,oBAAX,0BCZOC,EAAW,SAAC,GAAD,QACtBC,KACEhB,EAFoB,EAEpBA,KACAiB,EAHoB,EAGpBA,MACAR,EAJoB,EAIpBA,KACAE,EALoB,EAKpBA,SALoB,OAQtB,sBAAKR,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGc,IAGFjB,GAAQ,cAAC,EAAD,CAAUA,KAAMA,OAG3B,mBAAGG,UAAU,iBAAb,SACGM,IAGH,uBAEA,cAAC,EAAD,CAAaE,SAAUA,QCzBdO,EAAW,SAAC,GAAD,SAAGC,MACnBN,KAAI,SAAAG,GAAI,OACZ,qBACEb,UAAU,WADZ,SAIE,cAAC,EAAD,CAAUa,KAAMA,KAFXA,EAAKF,QCUT,IAAMK,EAAQC,EAAgBP,KAAI,SAAAG,GAAI,kCACxCA,GADwC,IAE3ChB,MAXmBqB,EAWDL,EAAKK,OAVhBC,EAAgBC,MAAK,SAAAvB,GAAI,OAAIA,EAAKc,KAAOO,MAC3C,MAULV,UAPuBa,EAOGR,EAAKF,GANxBW,EAAmBC,QAAO,SAAAlB,GAAO,OAAIgB,IAAWhB,EAAQgB,aADjE,IAAyBA,EALJH,KAeRM,EAAM,kBACjB,0BAASxB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAGA,cAAC,EAAD,CAAUgB,MAAOA,QCvBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.acaaef7b.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = ({\n  user: {\n    name,\n    email,\n  },\n}) => (\n  <p>\n    {' Posted by  '}\n\n    <a\n      className=\"UserInfo\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      href={`mailto:${email}`}\n    >\n      {name}\n    </a>\n  </p>\n);\n","export const CommentInfo = ({ comment: {\n  name,\n  email,\n  body,\n} }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">\n        {name}\n      </strong>\n\n      <span>\n        by\n      </span>\n\n      <a\n        className=\"CommentInfo__email\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        href={`mailto:${email}`}\n      >\n        {email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {body}\n    </div>\n  </div>\n);\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  comments.length\n    ? (\n      <div className=\"CommentList\">\n        {comments.map(comment => (\n          <CommentInfo\n            comment={comment}\n            key={comment.id}\n          />\n        ))}\n      </div>\n    )\n    : (\n      <p data-cy=\"NoCommentsMessage\">\n        No comments\n      </p>\n    )\n);\n","import './PostInfo.scss';\nimport { UserInfo } from '../UserInfo';\nimport { CommentList } from '../CommentList';\n\nexport const PostInfo = ({\n  post: {\n    user,\n    title,\n    body,\n    comments,\n  },\n}) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">\n        {title}\n      </h3>\n\n      {user && <UserInfo user={user} />}\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {body}\n    </p>\n\n    <hr />\n\n    <CommentList comments={comments} />\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  posts.map(post => (\n    <div\n      className=\"PostList\"\n      key={post.id}\n    >\n      <PostInfo post={post} />\n    </div>\n  ))\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n\nfunction getCommentsById(postId) {\n  return commentsFromServer.filter(comment => postId === comment.postId);\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">\n      Static list of posts\n    </h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}